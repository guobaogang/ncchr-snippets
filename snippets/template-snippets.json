{
    "ncc-modal-html": {
        "scope": "javascript",
        "prefix": "ncc-modal-html",
        "body": [
            "const {NCModal} = base;",
            "const {Header: NCModalHeader, Body: NCModalBody, Footer: NCModalFooter} = NCModal;",
            "",
            "<NCModal",
            "    className='xxxxx'",
            "    show={modalVisible}",
            "    size='xlg'",
            "    onHide={this.closeModal}",
            "    backdrop={'static'}",
            ">",
            "    <NCModalHeader closeButton={true}>",
            "        modal标题",
            "    </NCModalHeader>",
            "    <NCModalBody>",
            "        <div className='xxxx'>",
            "        </div>",
            "    </NCModalBody>",
            "    <NCModalFooter>",
            "        <NCButton colors='primary' onClick={this.onSure}>",
            "            确认",
            "        </NCButton>",
            "        <NCButton onClick={this.closeModal}>",
            "            关闭",
            "        </NCButton>",
            "    </NCModalFooter>",
            "</NCModal>"
        ],
        "description": "创建Modal"
    },
    "ncc-container-html": {
        "scope": "javascript",
        "prefix": "ncc-container-html",
        "body": [
            "import React from 'react';",
            "import './index.less';",
            "import {createPage} from 'nc-lightapp-front';",
            "import {render} from 'src/hrpub/common/frame';",
            "import ButtonAction from '../actions/btn';",
            "import MainAction from '../actions/main';",
            "import Layout from 'src/hrpub/common/components/Layout';",
            "import HeaderMiddleContent from '../components/Header';",
            "",
            "const {Header, Content} = Layout;",
            "",
            "const HomePage = render({",
            "    actions: {",
            "        mainAct: MainAction,",
            "        btnAct: ButtonAction",
            "    }",
            "})(({props, action, state}) => {",
            "    const {main, button} = props;",
            "    const {language} = main;",
            "    return (",
            "        <div>",
            "            <Layout className=\"xxxx nc-bill-card\">",
            "                <Header",
            "                    showOrgRefer={true}",
            "                    buttonOptions={{",
            "                        area: 'head',",
            "                        onButtonClick: action.btnAct.onButtonClick",
            "                    }}",
            "                    button={button}",
            "                >",
            "                    <HeaderMiddleContent {...props}/>",
            "                </Header>",
            "                <Content>",
            "                    <div>",
            "",
            "                    </div>",
            "                </Content>",
            "            </Layout>",
            "        </div>",
            "    );",
            "});",
            "",
            "export default createPage({",
            "    billinfo: [{}]",
            "})(HomePage);"
        ],
        "description": "创建Container页面"
    },
    "ncc-action-template": {
        "scope": "javascript",
        "prefix": "ncc-action-template",
        "body": [
            "import React from \"react\";",
            "",
            "export default class XXXAction {",
            "    constructor(comp) {",
            "        this.comp = comp;",
            "        this.dispatch = this.comp.props.dispatch;",
            "    }",
            "    ",
            "}"
        ],
        "description": "创建action模板"
    },
    "ncc-confirm-prompt-box": {
        "scope": "javascript",
        "prefix": "ncc-confirm-prompt-box",
        "body": [
            "import {promptBox} from 'nc-lightapp-front';",
            "",
            "promptBox({",
            "    color: \"warning\",",
            "    title: \"标题\",",
            "    content: \"内容\",",
            "    noFooter: false,",
            "    noCancelBtn: false,",
            "    beSureBtnClick: () => {",
            "",
            "    },",
            "    cancelBtnClick: () => {",
            "",
            "    },",
            "    closeBtnClick: () => {",
            "",
            "    }",
            "});"
        ],
        "description": "确认弹框"
    }
}